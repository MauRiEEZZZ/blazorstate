@page "/todo"
@inject IJSRuntime JS

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>
<ul>
        @foreach (var todo in todos)
        {
            <li>
                <input type="checkbox" @bind="todo.IsDone" />
                <input @bind="todo.Title" />
            </li>
        }
    </ul>
<EditForm Model="newTodo" OnSubmit="AddTodo">
    <div class="d-flex flex-row gap-2">
        <InputText @ref="newTodoInputText" @bind-Value="newTodo.Title" DisplayName="displayName"></InputText>
        <button type="submit" class="rounded">+</button>
    </div>
</EditForm>


@code {
    private List<TodoItem> todos = new();
    private TodoItem newTodo = new();
    private InputText newTodoInputText;
    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo.Title))
        {
            todos.Add(new TodoItem { Title = newTodo.Title });
            newTodo.Title = string.Empty;
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
            newTodoInputText.Element?.FocusAsync();
        base.OnAfterRender(firstRender);
    }
}
